"""Defines useful constants."""

import re
from collections import namedtuple

Species = namedtuple("Species", ["short", "full"])
Background = namedtuple("Background", ["short", "full"])
God = namedtuple("God", ["name"])

SPECIES = {
    Species("At", "Armataur"),
    Species("Ba", "Barachi"),
    Species("Co", "Coglin"),
    Species("DE", "Deep Elf"),
    Species("Dg", "Demigod"),
    Species("Dj", "Djinni"),
    Species("Dr", "Draconian"),
    Species("Ds", "Demonspawn"),
    Species("Fe", "Felid"),
    Species("Fo", "Formicid"),
    Species("Gh", "Ghoul"),
    Species("Gn", "Gnoll"),
    Species("Gr", "Gargoyle"),
    Species("Hu", "Human"),
    Species("Ko", "Kobold"),
    Species("Mf", "Merfolk"),
    Species("Mi", "Minotaur"),
    Species("MD", "Mountain Dwarf"),
    Species("Mu", "Mummy"),
    Species("Na", "Naga"),
    Species("On", "Oni"),
    Species("Op", "Octopode"),
    Species("Sp", "Spriggan"),
    Species("Te", "Tengu"),
    Species("Tr", "Troll"),
    Species("VS", "Vine Stalker"),
    Species("Vp", "Vampire"),
}

BACKGROUNDS = {
    Background("AE", "Air Elementalist"),
    Background("Al", "Alchemist"),
    Background("Ar", "Artificer"),
    Background("Be", "Berserker"),
    Background("Br", "Brigand"),
    Background("CA", "Cinder Acolyte"),
    Background("CK", "Chaos Knight"),
    Background("Cj", "Conjurer"),
    Background("De", "Delver"),
    Background("EE", "Earth Elementalist"),
    Background("En", "Enchanter"),
    Background("FE", "Fire Elementalist"),
    Background("Fi", "Fighter"),
    Background("Gl", "Gladiator"),
    Background("Hu", "Hunter"),
    Background("HW", "Hedge Wizard"),
    Background("Hs", "Hexslinger"),
    Background("IE", "Ice Elementalist"),
    Background("Mo", "Monk"),
    Background("Ne", "Necromancer"),
    Background("Re", "Reaver"),
    Background("Sh", "Shapeshifter"),
    Background("Su", "Summoner"),
    Background("Al", "Alchemist"),
    Background("Wn", "Wanderer"),
    Background("Wr", "Warper"),
}

GODS = {
    God("Ashenzari"),
    God("GOD_NO_GOD"),
    God("Beogh"),
    God("Cheibriados"),
    God("Dithmenos"),
    God("Elyvilon"),
    God("Fedhas"),
    God("Gozag"),
    God("Hepliaklqana"),
    God("Ignis"),
    God("Jiyva"),
    God("Kikubaaqudgha"),
    God("Lugonu"),
    God("Makhleb"),
    God("Nemelex Xobeh"),
    God("Okawaru"),
    God("Qazlal"),
    God("Ru"),
    God("Sif Muna"),
    God("The Shining One"),
    God("Trog"),
    God("Uskayaw"),
    God("Vehumet"),
    God("Xom"),
    God("Yredelemnul"),
    God("Zin"),
    God("Wu Jian"),
}

NONPLAYABLE_COMBOS = [
    "DgBe",
    "DgCA",
    "DgCK",
    "DgMo",
    "FeBr",
    "FeGl",
    "FeHs",
    "FeHu",
    "GhSh",
    "MuSh",
]
PLAYABLE_COMBOS = (
    "%s%s" % (rc.short, bg.short)
    for rc in SPECIES
    for bg in BACKGROUNDS
    if "%s%s" % (rc, bg) not in NONPLAYABLE_COMBOS
)
GOD_NAME_FIXUPS = {
    # Actually, the ingame name is 'the Shining One', but that looks
    # ugly since the capitalisation is wrong.
    "the Shining One": "The Shining One",
}
SPECIES_NAME_FIXUPS = {
    "Yellow Draconian": "Draconian",
    "Grey Draconian": "Draconian",
    "White Draconian": "Draconian",
    "Green Draconian": "Draconian",
    "Purple Draconian": "Draconian",
    "Mottled Draconian": "Draconian",
    "Black Draconian": "Draconian",
    "Red Draconian": "Draconian",
    "Pale Draconian": "Draconian",
}

Branch = namedtuple("Branch", ["short", "full", "multilevel"])
BRANCHES = {
    Branch("D", "Dungeon", True),
    Branch("Lair", "Lair of the Beasts", True),
    Branch("Temple", "Ecumenical Temple", False),
    Branch("Orc", "Orcish Mines", True),
    Branch("Vaults", "Vaults", True),
    Branch("Snake", "Snake Pit", True),
    Branch("Swamp", "Swamp", True),
    Branch("Shoals", "Shoals", True),
    Branch("Spider", "Spider Nest", True),
    Branch("Elf", "Elven Halls", True),
    Branch("Zig", "Ziggurat", True),
    Branch("Depths", "Depths", True),
    Branch("Abyss", "Abyss", True),
    Branch("Sewer", "Sewer", False),
    Branch("Pan", "Pandemonium", False),
    Branch("Crypt", "Crypt", True),
    Branch("Slime", "Slime Pits", True),
    Branch("Zot", "Realm of Zot", True),
    Branch("Ossuary", "Ossuary", False),
    Branch("IceCv", "Ice Cave", False),
    Branch("Hell", "Vestibule of Hell", False),
    Branch("Gauntlet", "Gauntlet", False),
    Branch("Bailey", "Bailey", False),
    Branch("Volcano", "Volcano", False),
    Branch("Tomb", "Tomb of the Ancients", True),
    Branch("Dis", "Iron City of Dis", True),
    Branch("Tar", "Tartarus", True),
    Branch("Geh", "Gehenna", True),
    Branch("Coc", "Cocytus", True),
    Branch("Bazaar", "Bazaar", False),
    Branch("WizLab", "Wizard's Laboratory", False),
    Branch("Trove", "Treasure Trove", False),
    Branch("Desolation", "Desolation of Salt", False),
}

BLACKLISTS = {
    "griefers": {},
    "bots": {
        "autorobin",
        "xw",
        "auto7hm",
        "rw",
        "qw",
        "ow",
        "qwrobin",
        "gw",
        "notqw",
        "jw",
        "parabodrick",
        "hyperqwbe",
        "cashybrid",
        "tstbtto",
        "parabolic",
        "oppbolic",
        "ew",
        "rushxxi",
        "gaubot",
        "cojitobot",
        "paulcdejean",
        "otabotab",
        "nakatomy",
        "testingqw",
        "beemell",
        "beem",
        "drasked",
        "phybot",
        "khrogbot",
        "jwbot",
        "autocrawlbot",
        "swippen",
        "cotteux",
    },
}

LOGFILE_REGEX = re.compile("(logfile|allgames)")
MILESTONE_REGEX = re.compile("milestone")
KTYPS = (
    "mon",
    "beam",
    "quitting",
    "leaving",
    "pois",
    "winning",
    "acid",
    "cloud",
    "disintegration",
    "wild_magic",
    "starvation",
    "trap",
    "spore",
    "burning",
    "targeting",
    "draining",
    "water",
    "rotting",
    "something",
    "curare",
    "stupidity",
    "bounce",
    "targetting",
    "self_aimed",
    "spines",
    "rolling",
    "lava",
    "barbs",
    "falling_down_stairs",
    "divine_wrath",
    "xom",
    "weakness",
    "clumsiness",
    "being_thrown",
    "wizmode",
    "beogh_smiting",
    "headbutt",
    "mirror_damage",
    "freezing",
    "reflect",
    "collision",
    "petrification",
    "tso_smiting",
    "falling_through_gate",
)
KTYP_FIXUPS = {
    # Renames
    "divine wrath": "divine_wrath",
    "wild magic": "wild_magic",
    "self aimed": "self_aimed",
    "falling down stairs": "falling_down_stairs",
}

VERBS = (
    "begin",
    "br.enter",
    "br.end",
    "br.exit",
    "abyss.enter",
    "abyss.exit",
    "zig",
    "zig.enter",
    "zig.exit",
    "shaft",
    "rune",
    "orb",
    "uniq",
    "uniq.ban",
    "uniq.ens",
    "uniq.pac",
    "uniq.slime",
    "ghost",
    "ghost.ban",
    "god.worship",
    "god.maxpiety",
    "god.ecumenical",
    "god.renounce",
    "god.mollify",
    "sacrifice",
    "ancestor.class",
    "death", #felids
    "death.final", #all others
    "monstrous",
)

SKILLS = (
    "Fighting",
    "Short Blades",
    "Long Blades",
    "Maces & Flails",
    "Axes",
    "Polearms",
    "Staves",
    "Unarmed Combat",
    "Ranged Weapons",
    "Throwing",
    "Armour",
    "Dodging",
    "Shields",
    "Spellcasting",
    "Conjurations",
    "Hexes",
    "Charms",
    "Summonings",
    "Necromancy",
    "Translocations",
    "Shapeshifting",
    "Fire Magic",
    "Ice Magic",
    "Air Magic",
    "Earth Magic",
    "Alchemy",
    "Invocations",
    "Evocations",
    "Stealth"
)

RUNE_BRANCHES = (
    "Abyss",
    "Coc",
    "Dis",
    "Geh",
    "Pan",
    "Swamp",
    "Shoals",
    "Slime",
    "Snake",
    "Spider",
    "Tar",
    "Tomb",
    "Vaults"
)
    

MULTI_LEVEL_BRANCHES = (
    "Abyss",
    "Coc",
    "Dis",
    "Geh",
    "Pan",
    "Swamp",
    "Shoals",
    "Slime",
    "Snake",
    "Spider",
    "Tar",
    "Tomb",
    "Vaults",
    "Lair",
    "D",
    "Depths",
    "Zot",
    "Orc",
    "Elf",
    "Zig",
    "Crypt"
)
# Uniques' tile name are all in lower case, and come from:  https://github.com/crawl/crawl/tree/master/crawl-ref/source/rltiles/mon/unique
#Unique = namedtuple("Unique", ["tileName", "shortUniqueName", "fullUniqueName", "species", "background", ] )
#UNIQUES = {
 #   Unique("Agnes", "Agnes the Wanderer", "Sp", "Gl"),
  #  Unique("Aizul", "Aizul the Neglectful Guardian", "Na", "Al"),
   # Unique("Amaemon", "Amaemon the Diabolical Poisoner", "Ds", "Al"),
#    Unique("Antaeus", "Antaeus, Guardian of Cocytus", "On", "IE"),
 #   Unique("Arachne", "Arachne the Weaver", "Op", "Al"),
  #  Unique("Asmodeus", "Asmodeus, Prince of Gehenna", "Te", "FE"),
   # Unique("Asterion", "Asterion the Fallen King", "Mi", "Fi"),
#    Unique("Azrael", "Azrael the Boundless Flame", "Dj", "FE"),
 #   Unique("Bai Suzhen", "Bai Suzhen, Madame White Snake", "Dr", "AE"),
  #  Unique("Blork", "Blork the orc", "HO", "Cj"),
   # Unique("Boris", "Boris, Master of Life and Death", "Mu", "Cj"),
#    Unique("Cerebov", "Cerebov, Demon Lord of Fire and Steel", "Ds", "FE"),
 #   Unique("Crazy Yiuf", "Crazy Yiuf the Enlightened", "Gn", "CK"),
  #  Unique("Dispater", "Dispater, Lord of the Iron City", "Gr", "EE"),
   # Unique("Dissolution", "Dissolution, High Priest of Jiyva", "Fo", "Sh"),
#    Unique("Donald", "Donald the Adventurer", "Hu", "Fi"),
 #   Unique("Dowan", "Dowan, Brother of Duvessa", "DE", "FE"),
  #  Unique("Duvessa", "Duvessa, Sister of Dowan", "DE", "Gl"),
   # Unique("The Enchantress", "The Enchantress", "Sp", "Wr"),
#    Unique("Erica", "Erica the Fiery-Tempered", "Op", "Al"),
 #   Unique("Erolcha", "Erolcha the Cunning", "On", "FE"),
  #  Unique("Eustachio", "Eustachio the Magnificent", "Hu", "Su"),
   # Unique("Ereshkigal", "Ereshkigal, Queen of Tartarus", "Vp", "En"),
#    Unique("Fannar", "Fannar the Cold-Hearted", "DE", "IE"),
 #   Unique("Frances", "Frances the Duchess of Pandemonium", "Hu", "EE"),
  #  Unique("Frederick", "Frederick the Flawless", "Dg", "EE"),
   # Unique("Gastronok", "Gastronok the Ponderous", "Op", "Su"),
#    Unique("Geryon", "Geryon, Gatekeeper of Hell", "Na", "Gl"),
 #   Unique("Gloorx Vloq", "Gloorx Vloq, Demon Lord of Darkness", "Ds", "Ne"),
  #  Unique("Grinder", "Grinder", "Ds", "En"),
   # Unique("Grum", "Grum the Hunter", "Gn", "Gl"),
#    Unique("Grunn", "Grunn the Punished", "Gn", "Su"),
 #   Unique("Harold", "Harold the Weathered", "Hu", "Gl"),
  #  Unique("Ignacio", "Ignacio, Master of Excruciating Pain", "Gh", "Gl"),
   # Unique("Ilsuiw", "Ilsuiw, Witch of the Tides", "Mf", "IE"),
#    Unique("Ijyb", "Ijyb the Twisted Goblin", "Ko", "Ar"),
 #   Unique("Jessica", "Jessica the Apprentice Sorceress", "Hu", "Ne"),
  #  Unique("Jorgrun", "Jorgrun Earthshaker", "HO", "EE"),
   # Unique("Jory", "Jory the Bloodstained Count", "Vp", "Ne"),
#    Unique("Joseph", "Joseph, a Mercenary", "Hu", "Hu"),
 #   Unique("Josephine", "Josephine the Decaying Necromancer", "Ko", "Ne"),
  #  Unique("Josephina", "Josephina the Ice-Lich", "Gh", "Ne"),
   # Unique("Khufu", "Khufu the Undying Pharaoh", "Mu", "Su"),
#    Unique("Kirke", "Kirke, Weaver of Myths", "Hu", "Su"),
 #   Unique("The Lernaean hydra", "The Lernaean hydra", "Mf", "Sh"),
  #  Unique("Lodul", "Lodul the Thundrous", "On", "AE"),
   # Unique("Lom Lobon", "Lom Lobon, Demon Lord of Forbidden Knowledge", "Ds", "IE"),
#    Unique("Louise", "Louise the Corrupted", "Hu", "EE"),
 #   Unique("Mara", "Mara, Lord of Illusions", "Ds", "Su"),
  #  Unique("Maggie", "Maggie the Vainglorious", "Hu", "FE"),
   # Unique("Margery", "Margery the Dragonslayer", "Hu", "FE"),
#    Unique("Maurice", "Maurice the Thief", "VS", "Wr"),
 #   Unique("Menkaure", "Menkaure, Prince of Dust", "Mu", "Ne"),
  #  Unique("Mennas", "Mennas, the Voice of Zin", "Gr", "Fi"),
   # Unique("Mlioglotl", "Mlioglotl, the Unformed Horror", "Ds", "Re"),
#    Unique("Mnoleg", "Mnoleg, Demon Lord of Chaos", "Ds", "Su"),
 #   Unique("Murray", "Murray the Demonic Talking Skull", "Gr", "Ne"),
  #  Unique("Natasha", "Natasha, Servant of Life and Death", "Fe", "HW"),
   # Unique("Nergalle", "Nergalle the Soulbinder", "On", "Ne"),
#    Unique("Nessos", "Nessos the Markscentaur", "Ar", "Hs"),
 #   Unique("Nikola", "Nikola the Mad Inventor", "Hu", "AE"),
  #  Unique("Pargi", "Pargi the Meek", "Tr", "Gl"),
   # Unique("Parghit", "Parghit the Mighty", "Tr", "Gl"),
#    Unique("Pikel", "Pikel, Merchant of Souls", "Ko", "Br"),
 #   Unique("Polyphemus", "Polyphemus the Watchful Shepherd", "On", "Gl"),
  #  Unique("Prince Ribbit", "Prince Ribbit", "Ba", "Wr"),
   # Unique("Psyche", "Psyche the Insane Magess", "Hu", "CK"),
#    Unique("Robin", "Robin of the Strong Arm", "Ko", "Gl"),
 #   Unique("Roxanne", "Roxanne, Geomancer Emeritus", "Gr", "EE"),
  #  Unique("Rupert", "Rupert the Wild", "Hu", "Be"),
   # Unique("Saint Roka", "Saint Roka the Messiah", "Ho", "Gl"),
#    Unique("Serpent of Hell", "Serpent of Hell", "Dr", "Sh"),
 #   Unique("Sigmund", "Sigmund the Dreaded", "Hu", "FE"),
  #  Unique("Snorg", "Snorg the Insatiable", "Tr", "Be"),
   # Unique("Sojobo", "Sojobo, Queen of Tengu", "Te", "AE"),
#    Unique("Sonja", "Sonja the Graceful Assassin", "Ko", "Br"),
 #   Unique("Terence", "Terence the Incautious", "Hu", "Fi"),
  #  Unique("Tiamat", "Tiamat, Avatar of the Dragonlord", "Dr", "HW"),
   # Unique("Urug", "Urug the Orcish Ballista", "HO", "Gl"),
#    Unique("Vashnia", "Vashnia the Elite Marksnaga", "Na", "Hu"),
 #   Unique("Vv", "Vv the Exile", "Gr", "FE"),
  #  Unique("Xtahua", "Xtahua the Ancient", "Dr", "Sh"),
   # Unique("Zenata", "Zenata, Seeker of Sheza", "Hu", "Gl")
#}
